import numpy as np
import pandas as pd
from sklearn.preprocessing import LabelEncoder
from sklearn.preprocessing import StandardScaler

veri = pd.read_csv("adana.csv")

label_encoder = LabelEncoder().fit(veri["PM10"])
labels = label_encoder.transform(veri["PM10"])
classes = list(label_encoder.classes_)

x = veri.drop(["Tarih"], axis=1)
y = labels
sc = StandardScaler()
x = sc.fit_transform(x)

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2)

from tensorflow.keras.utils import to_categorical
y_train = to_categorical(y_train)
y_test = to_categorical(y_test)
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

model = Sequential()
model.add(Dense(100,input_dim=5,activation="relu"))
model.add(Dense(50,activation="relu"))
model.add(Dense(1,activation="softmax"))
model.summary()

model.compile(loss="kullback_leibler_divergence", optimizer="nadam", metrics=["accuracy"])

model.fit(x_train, y_train, validation_data=(x_test,y_test), epochs=100)

print("Eğitim Kaybı: ", np.mean(model.history.history["loss"]))
print("Eğitim Başarımı: ", np.mean(model.history.history["accuracy"]))
print("Doğrulama Kaybı: ", np.mean(model.history.history["val_loss"]))
print("Doğrulama Başarımı: ", np.mean(model.history.history["val_accuracy"]))

import matplotlib.pyplot as plt
plt.plot(model.history.history["accuracy"])
plt.plot(model.history.history["val_accuracy"])
plt.title("Model Başarımı")
plt.ylabel("Başarım")
plt.xlabel("Epok")
plt.legend("Eğitim", "Test", loc= "upper left")
plt.show()

plt.plot(model.history.history["loss"])
plt.plot(model.history.history["val_loss"])
plt.title("Model Kaybı")
plt.ylabel("Kayıp")
plt.xlabel("Epok")
plt.legend("Eğitim", "Test", loc= "upper left")
plt.show()